'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var navigation = require('next/navigation');
var React = require('react');
var useLocale = require('../../react-client/useLocale.js');
var utils = require('../../shared/utils.js');

/**
 * Returns the pathname without a potential locale prefix.
 *
 * @example
 * ```tsx
 * 'use client';
 *
 * import {usePathname} from 'next-intl/client';
 *
 * // When the user is on `/en`, this will be `/`
 * const pathname = usePathname();
 * ```
 */
function useBasePathname() {
  // The types aren't entirely correct here. Outside of Next.js
  // `useParams` can be called, but the return type is `null`.
  const pathname = navigation.usePathname();
  const locale = useLocale.default();
  return React.useMemo(() => {
    if (!pathname) return pathname;
    const isPathnamePrefixed = utils.hasPathnamePrefixed(locale, pathname);
    const unlocalizedPathname = isPathnamePrefixed ? utils.unlocalizePathname(pathname, locale) : pathname;
    return unlocalizedPathname;
  }, [locale, pathname]);
}

exports.default = useBasePathname;
